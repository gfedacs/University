-- Questão 2
Create or Replace Function logFilme()
Returns trigger as $$
declare op char(1);
Begin
	op = SUBSTR(tg_op,1,1);
	insert into filmelog values(user,op,now());
	return new;
End;
$$ LANGUAGE plpgsql; 

CREATE TRIGGER logFilme AFTER UPDATE or INSERT or DELETE ON filme
FOR EACH ROW EXECUTE PROCEDURE logFilme();

insert into filme values(default, 'Alo Mundo',155,2,1);

select * from filmelog;

-- Questão 3

CREATE or replace VIEW filmeCateg AS
Select titulo, desccateg
From filme f join categoria c on f.codfilme = c.codcateg
order by titulo;

-- Questão 4

Create or replace function insFilmeCateg()  
Returns trigger
As $$ 
Declare 
  vCodFilme integer;
  VcodCateg integer;
Begin
  Select max(codfilme)+1 into vCodFilme from filme;
  select CodCateg into strict vcodCateg from categoria 
     where desccateg = new.desccateg;          
  insert into filme (codfilme, titulo, codcateg) 
  values(vcodfilme, new.titulo, vcodCateg); 
  return new; 
  Exception
     When no_data_found then
        select max(codCateg)+1 into vcodCateg from categoria;
        insert into categoria values (vcodCateg, new.desccateg);
        insert into filme (codfilme, titulo, codcateg) values(vcodfilme, new.titulo, vcodCateg);
        return new;   
End;
 $$ LANGUAGE plpgsql;

Create trigger insViewFilmeCateg
Instead of insert on filmeCateg
for each row
execute procedure insFilmeCateg(); 

insert into filmeCateg values ('Superman','Aventura'); 

select * from filmeCateg;
select * from filme;

-- Questão 5
Alter table filme drop constraint fkfilme2estud;

create or replace function upCascadeEstudio()
returns trigger as $$
begin
    update filme set codEst = new.codEst
	where codEst = old.codEst;   
    RETURN new;
end;
$$ LANGUAGE plpgsql;

create or replace trigger updateCascade
after update on Estudio 
for each Row execute procedure upCascadeEstudio();

update Estudio set codEst=53
where codEst= 1;

-- Questão 6

create or replace function calcularIdadeAutor(idArtista int)
returns int as $$
begin
    return extract(Year from AGE( current_date, dataNasc ))   
    from Artista
    where codArt = idArtista;
end;
$$ LANGUAGE 'plpgsql';

select * from artista where codArt=1;
select calcularIdadeAutor(1) ;
